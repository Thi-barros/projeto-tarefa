package com.unip.desafio.controller;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.validation.BindingResult;
import org.springframework.web.bind.annotation.*;

import com.unip.desafio.model.ProjetoService;
import com.unip.desafio.model.Tarefa;
import com.unip.desafio.model.TarefaService;

import jakarta.transaction.Transactional;
import jakarta.validation.Valid;

import java.util.List;

@Controller
@RequestMapping("/tarefas")
public class TarefaController {

	@Autowired
	private ProjetoService projetoService;
    @Autowired
    private TarefaService tarefaService;

    @GetMapping
    public List<Tarefa> listarTarefas() {
        return tarefaService.listarTarefas();
    }

    @PostMapping("/salvar")
    @Transactional
    public String criarTarefa(@RequestBody @Valid Tarefa tarefa, BindingResult result, Model model) {
    	if (result.hasErrors()) {
            model.addAttribute("projetos", projetoService.listarProjetos());
            model.addAttribute("tarefa", tarefa);
            return "index"; // Retorna a mesma p√°gina com erros
        }
    	tarefaService.salvarTarefa(tarefa);
         return "Tarefa salva com sucesso.";
    }

    @GetMapping("/{id}")
    public Tarefa buscarTarefaPorId(@PathVariable Long id) {
        return tarefaService.buscarTarefa(id);
    }

    @PutMapping("/{id}")
    public Tarefa atualizarTarefa(@PathVariable Long id, @RequestBody Tarefa tarefaAtualizada) {
        Tarefa tarefa = tarefaService.buscarTarefa(id);
        if (tarefa != null) {
            tarefa.setDescricao(tarefaAtualizada.getDescricao());
            tarefa.setNome(tarefaAtualizada.getNome());
            tarefa.setId(tarefaAtualizada.getId());
            return tarefaService.salvarTarefa(tarefa);
        }
        return null;
    }

    @DeleteMapping("/{id}")
    public void deletarTarefa(@PathVariable Long id) {
        tarefaService.deletarTarefa(id);
    }
}
